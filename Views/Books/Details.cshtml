@model BookStore.Models.Book

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YearPublished)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YearPublished)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NumPages)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NumPages)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Publisher)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Publisher)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FrontPage)
        </dt>
        <dd class="col-sm-10">
            @if (!string.IsNullOrWhiteSpace(Model.FrontPage))
            {
                <img src="@Url.Content(Model.FrontPage)" alt="Front Page Image" style="max-width: 150px;">
            }
        </dd>
        <dt class="col-sm-2">
            @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || (User.IsInRole("User") && (ViewBag.Bought == true))))
            {
                @Html.DisplayNameFor(model => model.DownloadUrl)
            }
        </dt>
        <dd class="col-sm-10">
            @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || (User.IsInRole("User") && (ViewBag.Bought == true))))
            {
                <a href="@Model.DownloadUrl">E-book</a>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Author.FullName)
        </dd>
    </dl>
</div>
<div>
    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
        <span> | </span>
    }
    @if (User.Identity.IsAuthenticated && User.IsInRole("User") && (ViewBag.Bought == false))
    {
        <a asp-action="Buy" asp-route-id="@Model?.Id" class="btn btn-primary">Buy</a>
        <br />
    }
    <a asp-action="Index">Back to List</a>
</div>

<hr />
<h5>Average Rating</h5>
@if (Model.Reviews.Any())
{
    double? averageRating =  Model.Reviews.Average(r => r.Rating);
    decimal roundedRating = Convert.ToDecimal(averageRating.GetValueOrDefault());
    decimal rounded = Math.Round(roundedRating, 2);
    <p>@rounded</p>
}
else
{
    <p>There are no ratings.</p>
}
<hr />
<h5>Book reviews</h5>
<br />
@foreach (var el in Model.Reviews)
{
    <div class="card">
         <div class="card-body text-center">
            <p>@Html.DisplayFor(modelItem => el.AppUser):</p>
            <p>@Html.DisplayFor(modelItem => el.Comment)</p>
            <p>Rating: @Html.DisplayFor(modelItem => el.Rating)</p>

         </div>
     </div>
}
